<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Unreal Render Pipeline on Shaderwit.ch - Unreal Engine render pipeline documentation and tutorials</title>
    <link>http://localhost:55045/unrealrenderpipeline/index.html</link>
    <description>Recent content in Unreal Render Pipeline on Shaderwit.ch - Unreal Engine render pipeline documentation and tutorials</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 21 Mar 2024 15:37:22 +0100</lastBuildDate>
    <atom:link href="http://localhost:55045/unrealrenderpipeline/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Shading Models</title>
      <link>http://localhost:55045/unrealrenderpipeline/shadingmodels/index.html</link>
      <pubDate>Thu, 21 Mar 2024 15:37:22 +0100</pubDate>
      <guid>http://localhost:55045/unrealrenderpipeline/shadingmodels/index.html</guid>
      <description>AuthorAlessa Baker Page StatusComplete
What is a Shading Model? A shading model simply describes how a given surface renders a pixel depending on lighting, camera direction, and the surface.
If you are familiar with regularly creating Unlit materials, you are likely trying to do something that doesn&amp;rsquo;t follow Unreal&amp;rsquo;s PBR (GGX) implementation and trying to remove or add your own lighting to better calculate your material&amp;rsquo;s aesthetic.
This unfortunately leads to the limitation of having to use Material Parameter Collections, Dynamic Material Instances, attempting to implement in a Post Process Material or Mesh Custom Data to pass in the lighting and can get quite tedious (and expensive) to implement.</description>
    </item>
  </channel>
</rss>